"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

#  1-ый алгоритм
def min_num1(lst):
	min_ = lst[0]
	for i in lst:
		for j in lst:
			if min_ > j:
				min_ = j
	return min_
			


print(min_num1([1, 2, 3, 4 ,5]))
print(min_num1([5, 4, 3, 2, 1]))
print(min_num1([1, 2, 0, 2, 1]))
print(min_num1([-1, 8, 0, -2, 1]))


#  2-ой алгоритм
def min_num2(lst):
	lst = sorted(lst)
	return lst[0]

print(min_num2([1, 2, 3, 4 ,5]))
print(min_num2([5, 4, 3, 2, 1]))
print(min_num2([1, 2, 0, 2, 1]))
print(min_num2([-1, 8, 0, -2, 1]))