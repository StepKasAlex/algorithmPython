"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы. Сортировка должна быть реализована в
виде функции. Обязательно доработайте алгоритм (сделайте его умнее).

Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение
Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность

Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию
"""
import timeit
import random

def sorting(list_):
    n = 1
    j = 0
    while n < len(list_):
        for i in range(len(list_)-n):
            if list_[i] < list_[i+1]:
                list_[i], list_[i+1] = list_[i+1], list_[i]
                j = 1
        if j == 0:
            break
        n += 1
    return list_

list_ = [random.randint(-100, 100) for i in range(1000)]

print(timeit.timeit("sorting(list_[:])", setup="from __main__ import sorting, list_", number=1))