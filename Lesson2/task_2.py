"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_func(num, even = 0, odd = 0):
	num_str = str(num)
	if int(num_str[0]) % 2 == 0:
		even += 1
		odd += 0
		if num_str[1:]:
			count_func(int(num_str[1:]), even, odd)
		else:
			print((even, odd))
			return None
	if int(num_str[0]) % 2 != 0:
		even += 0
		odd += 1
		if num_str[1:]:
			count_func(int(num_str[1:]), even, odd)
		else:
			print((even, odd))
			return None	

count_func(210101010102333)