"""
Задание 1.
Выполните профилирование памяти в скриптах
Проанализировать результат и определить программы с
наиболее эффективным использованием памяти.

Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько
вариантов кода для одной и той же задачи. Можно взять задачи с курса Основ или с текущего курса Алгоритмов

Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.

ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО
"""
from memory_profiler import profile


"""Создаем словарь значений из списка"""
@profile
def func(list_):
	"""В данной функции использовалось 18.1 MiB"""
	list_evens = []
	list_evens2 = []
	dict_ = {}
	for i in list_:
		if i % 2 == 0:
			list_evens.append(i)
			list_evens2.append(i**2)
	for n, s in zip(list_evens, list_evens2):
		dict_[n] = s
	return dict_

@profile
def func2(list_):
	"""В данной функции использовалось 17.7 MiB"""
	dict_ = {n:n**2 for n in list_ if n % 2 == 0}
	return dict_


func(list(range(100000)))
func2(list(range(100000)))

"""В идеале делать как можно меньше новых объектов, которые задействуют память
   Хоть у меня в примерах этого нет, но если какой-то объект уже не будет использоваться в будущем, то его лучше убирать из памяти с помощью 'del'"""